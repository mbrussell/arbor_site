{"title":"Linear quantile mixed models: applications in forestry","markdown":{"yaml":{"title":"Linear quantile mixed models: applications in forestry","description":"LQMM models provide a flexible structure to account for random effects","author":"Matt Russell","date":"2023-08-21","slug":[],"categories":["Statistics"],"tags":["analytics","forest measurements","data science","mixed models","quantile regression"],"image":"lqmm_example.png"},"headingText":"Linear quantile mixed models","containsRefs":false,"markdown":"\n\n<center>\n\n![*Example output comparing predictions from three models fit with linear quantile mixed models and one fit using ordinary least squares.*](lqmm_example.png){width=500px}\n</center>\n\nMixed models have been used for decades by forest biometricians and statisticians. [They have become popular](https://arbor-analytics.com/post/mixed-models-a-primer/) because forestry and natural resources data are often nested, allowing the analyst to account for spatial and temporal correlation among measurements. Forest plots are often measured within stands, stands are located within ownerships, and a collection of ownerships comprise a landscape.\n\nWith mixed models, fixed effects are considered population-averaged values and are similar to the parameters found in “traditional” regression techniques like ordinary least squares. Random effects can be determined for each parameter, typically for each hierarchical level in a data set.\n\nQuantile regression has also become a widely used technique in forestry. [Quantile regression](https://www.aeaweb.org/articles?id=10.1257/jep.15.4.143) methods allow estimation of response variables for any quantile of the data. While ordinary least squares and other regression techniques fit regression lines through the mean or median (i.e., 50th quantile), quantile regression can perform regression through any quantile of the data.  \n\n\nAs an extension to quantile regression, [linear quantile mixed models (LQMM)](https://link.springer.com/article/10.1007/s11222-013-9381-9) provide a flexible structure to account for multilevel data through the incorporation of random effects. These LQMM models may be specified with random effects similar to a mixed models framework. \n\nThe general model form for an LQMM model follows, adapted from a simple linear regression model form with a random effect placed on the intercept:\n\n$$Y=\\beta_0+b_i+\\beta_1X+\\epsilon$$\n\nwhere $\\beta_0$ and $\\beta_1$ are fixed effects and $b_i$ is a random effect for subject $i$. The random effect can be thought of as each subject's deviation from the fixed intercept parameter. The $\\beta_0$ and $\\beta_1$ values are fit using LQMM procedures to any desired quantile.\n\n## The lqmm package in R\n\nIn R, [the **lqmm** package](https://rdrr.io/cran/lqmm/man/lqmm.html) fits linear quantile mixed models for hierarchical data:\n\n```{r, warning = F, message = F}\n#install.packages(\"lqmm\")\n\nlibrary(lqmm)\n```\n\nAs an application, we can fit an LQMM to predict tree height (`HT`) based on its diameter at breast height (`DBH`). Data are from 450 red pine trees collected at the Cloquet Forestry Center in Cloquet, Minnesota in 2014 with `DBH` measured in inches and `HT` measured in feet. The data are found in the *redpine* data set available in the **stats4nr** package:\n\n```{r}\n# install.packages(\"devtools\")\n\n#devtools::install_github(\"mbrussell/stats4nr\")\n\nlibrary(stats4nr)\n\ndata(redpine)\n```\n\nNow, most applications of tree height-diameter models will employ nonlinear model forms, but for the red pine data here, we can see a general linear trend with the data. Plus, it will make our application of LQMM techniques easy to compare to other linear regression techniques:\n\n```{r, warning = F, message =F}\nlibrary(tidyverse)\n\nggplot(redpine, aes(x = DBH, y = HT)) +\n  geom_point() +\n  labs(x = \"DBH (inches)\",\n       y = \"Height (feet)\") +\n  theme_bw()\n```\n\nWe might believe that specifying the inventory plot as a random effect can improve our model performance. That is, we might believe that the inventory plot in which a tree was measured can reduce the variability in tree height estimates. To fit an LQMM model with a random intercept term in R, we specify the `lqmm()` function. The key arguments are specifying the model form in the `fixed =` statement and the random effect variable with the `group =` statement. The `tau =` statement allows you to specify the quantile you wish to run the model:\n\n```{r}\nht.lqmm50 <- lqmm(fixed = HT ~ DBH, \n                random = ~1, \n                group = PlotNum,\n                tau = 0.50,\n                data = redpine)\n\nsummary(ht.lqmm50)\n```\n\nWe can also extract the random effects for each inventory plot using the `ranef()` function. We can see that the random effects are centered around zero and range from about -20 to 20: \n\n```{r}\nranef <- ranef(ht.lqmm50)\n\nggplot(ranef, aes(`(Intercept)`)) +\n  geom_density()  \n```\n\nWe can compare the LQMM model output to a simple linear regression fit the the mean value and without any random effect:\n\n```{r}\nht.slr <- lm(HT~DBH,\n             data = redpine)\nsummary(ht.slr)\n```\n\nYou can see that the intercept values are quite similar (31.5179 and 31.1552), however the slope for the LQMM model (2.7629) is lower than that of the simple linear regression (3.0493).\n\nWe can specify multiple quantiles in the `tau =` statement to run multiple regressions at various quantiles of the data. We might seek to do this because trees at higher quantiles may be in better crown positions, i.e., they are dominant or co-dominant trees and might need to estimate site index of the forest stand using these trees. Similarly, trees at lower quantiles may be suppressed or intermediate in crown position and we might wish to implement management strategies that improve their growth. As we fit the LQMM models, note the increases in the slope term associated with `DBH` as the quantiles increase from 0.25 to 0.75:  \n\n```{r}\nht.lqmm <- lqmm(fixed = HT ~ DBH, \n                random = ~1, \n                group = PlotNum,\n                tau = c(0.25, 0.50, 0.75),\n                data = redpine)\n\nsummary(ht.lqmm)\n```\n\nLet's make a small data set that contains the predictions of these models, stored in the **tree** data set. Then, we'll visualize the output along with the ordinary least squares line: \n\n```{r}\ntree <- tibble(DBH = c(seq(0,30,1))) %>% \n  mutate(`Ordinary least squares` = 31.1552 + 3.0493*DBH,\n         `LQMM, quantile = 0.25` = 28.26885 + 2.69508*DBH,\n         `LQMM, quantile = 0.50` = 31.51788 + 2.76287*DBH,\n         `LQMM, quantile = 0.75` = 32.15125 + 3.19633*DBH) %>% \n  pivot_longer(`Ordinary least squares`:`LQMM, quantile = 0.75`,\n               names_to = \"Model\",\n               values_to = \"HT\")\n\nggplot(tree, aes(DBH, HT, col = Model)) +\n  geom_line(linewidth = 1.25) +\n  labs(x = \"DBH (inches)\",\n       y = \"Height (feet)\") +\n  theme_bw()\n```\n\nOne thing I've noticed in fitting LQMM models is that the standard errors for parameter estimates tend to always be higher for compared to ordinary least squares models. They also tend to be high compared to models fit with linear mixed models through functions available in packages like **lme4**. This is likely due to the quantile regression techniques. \n\n## Conclusion\nLinear quantile mixed models are robust and combine the strengths of both mixed models and quantile regression techniques. These models have a number of potential applications with forestry and natural resources data where data are often nested and we're not always concerned with what's happening through the mean value of the data, but instead at some other quantile. There is also an R package that fits [quantile regressions for nonlinear mixed-effects models](https://cran.r-project.org/web/packages/qrNLMM/index.html), providing more tools to estimate trends through any quantile with data found in a variety of shapes and sizes.\n\n--\n\n*By Matt Russell. [Email Matt](mailto:matt@arbor-analytics.com) with any questions or comments.*","srcMarkdownNoYaml":"\n\n# \n<center>\n\n![*Example output comparing predictions from three models fit with linear quantile mixed models and one fit using ordinary least squares.*](lqmm_example.png){width=500px}\n</center>\n# \n\nMixed models have been used for decades by forest biometricians and statisticians. [They have become popular](https://arbor-analytics.com/post/mixed-models-a-primer/) because forestry and natural resources data are often nested, allowing the analyst to account for spatial and temporal correlation among measurements. Forest plots are often measured within stands, stands are located within ownerships, and a collection of ownerships comprise a landscape.\n\nWith mixed models, fixed effects are considered population-averaged values and are similar to the parameters found in “traditional” regression techniques like ordinary least squares. Random effects can be determined for each parameter, typically for each hierarchical level in a data set.\n\nQuantile regression has also become a widely used technique in forestry. [Quantile regression](https://www.aeaweb.org/articles?id=10.1257/jep.15.4.143) methods allow estimation of response variables for any quantile of the data. While ordinary least squares and other regression techniques fit regression lines through the mean or median (i.e., 50th quantile), quantile regression can perform regression through any quantile of the data.  \n\n## Linear quantile mixed models\n\nAs an extension to quantile regression, [linear quantile mixed models (LQMM)](https://link.springer.com/article/10.1007/s11222-013-9381-9) provide a flexible structure to account for multilevel data through the incorporation of random effects. These LQMM models may be specified with random effects similar to a mixed models framework. \n\nThe general model form for an LQMM model follows, adapted from a simple linear regression model form with a random effect placed on the intercept:\n\n$$Y=\\beta_0+b_i+\\beta_1X+\\epsilon$$\n\nwhere $\\beta_0$ and $\\beta_1$ are fixed effects and $b_i$ is a random effect for subject $i$. The random effect can be thought of as each subject's deviation from the fixed intercept parameter. The $\\beta_0$ and $\\beta_1$ values are fit using LQMM procedures to any desired quantile.\n\n## The lqmm package in R\n\nIn R, [the **lqmm** package](https://rdrr.io/cran/lqmm/man/lqmm.html) fits linear quantile mixed models for hierarchical data:\n\n```{r, warning = F, message = F}\n#install.packages(\"lqmm\")\n\nlibrary(lqmm)\n```\n\nAs an application, we can fit an LQMM to predict tree height (`HT`) based on its diameter at breast height (`DBH`). Data are from 450 red pine trees collected at the Cloquet Forestry Center in Cloquet, Minnesota in 2014 with `DBH` measured in inches and `HT` measured in feet. The data are found in the *redpine* data set available in the **stats4nr** package:\n\n```{r}\n# install.packages(\"devtools\")\n\n#devtools::install_github(\"mbrussell/stats4nr\")\n\nlibrary(stats4nr)\n\ndata(redpine)\n```\n\nNow, most applications of tree height-diameter models will employ nonlinear model forms, but for the red pine data here, we can see a general linear trend with the data. Plus, it will make our application of LQMM techniques easy to compare to other linear regression techniques:\n\n```{r, warning = F, message =F}\nlibrary(tidyverse)\n\nggplot(redpine, aes(x = DBH, y = HT)) +\n  geom_point() +\n  labs(x = \"DBH (inches)\",\n       y = \"Height (feet)\") +\n  theme_bw()\n```\n\nWe might believe that specifying the inventory plot as a random effect can improve our model performance. That is, we might believe that the inventory plot in which a tree was measured can reduce the variability in tree height estimates. To fit an LQMM model with a random intercept term in R, we specify the `lqmm()` function. The key arguments are specifying the model form in the `fixed =` statement and the random effect variable with the `group =` statement. The `tau =` statement allows you to specify the quantile you wish to run the model:\n\n```{r}\nht.lqmm50 <- lqmm(fixed = HT ~ DBH, \n                random = ~1, \n                group = PlotNum,\n                tau = 0.50,\n                data = redpine)\n\nsummary(ht.lqmm50)\n```\n\nWe can also extract the random effects for each inventory plot using the `ranef()` function. We can see that the random effects are centered around zero and range from about -20 to 20: \n\n```{r}\nranef <- ranef(ht.lqmm50)\n\nggplot(ranef, aes(`(Intercept)`)) +\n  geom_density()  \n```\n\nWe can compare the LQMM model output to a simple linear regression fit the the mean value and without any random effect:\n\n```{r}\nht.slr <- lm(HT~DBH,\n             data = redpine)\nsummary(ht.slr)\n```\n\nYou can see that the intercept values are quite similar (31.5179 and 31.1552), however the slope for the LQMM model (2.7629) is lower than that of the simple linear regression (3.0493).\n\nWe can specify multiple quantiles in the `tau =` statement to run multiple regressions at various quantiles of the data. We might seek to do this because trees at higher quantiles may be in better crown positions, i.e., they are dominant or co-dominant trees and might need to estimate site index of the forest stand using these trees. Similarly, trees at lower quantiles may be suppressed or intermediate in crown position and we might wish to implement management strategies that improve their growth. As we fit the LQMM models, note the increases in the slope term associated with `DBH` as the quantiles increase from 0.25 to 0.75:  \n\n```{r}\nht.lqmm <- lqmm(fixed = HT ~ DBH, \n                random = ~1, \n                group = PlotNum,\n                tau = c(0.25, 0.50, 0.75),\n                data = redpine)\n\nsummary(ht.lqmm)\n```\n\nLet's make a small data set that contains the predictions of these models, stored in the **tree** data set. Then, we'll visualize the output along with the ordinary least squares line: \n\n```{r}\ntree <- tibble(DBH = c(seq(0,30,1))) %>% \n  mutate(`Ordinary least squares` = 31.1552 + 3.0493*DBH,\n         `LQMM, quantile = 0.25` = 28.26885 + 2.69508*DBH,\n         `LQMM, quantile = 0.50` = 31.51788 + 2.76287*DBH,\n         `LQMM, quantile = 0.75` = 32.15125 + 3.19633*DBH) %>% \n  pivot_longer(`Ordinary least squares`:`LQMM, quantile = 0.75`,\n               names_to = \"Model\",\n               values_to = \"HT\")\n\nggplot(tree, aes(DBH, HT, col = Model)) +\n  geom_line(linewidth = 1.25) +\n  labs(x = \"DBH (inches)\",\n       y = \"Height (feet)\") +\n  theme_bw()\n```\n\nOne thing I've noticed in fitting LQMM models is that the standard errors for parameter estimates tend to always be higher for compared to ordinary least squares models. They also tend to be high compared to models fit with linear mixed models through functions available in packages like **lme4**. This is likely due to the quantile regression techniques. \n\n## Conclusion\nLinear quantile mixed models are robust and combine the strengths of both mixed models and quantile regression techniques. These models have a number of potential applications with forestry and natural resources data where data are often nested and we're not always concerned with what's happening through the mean value of the data, but instead at some other quantile. There is also an R package that fits [quantile regressions for nonlinear mixed-effects models](https://cran.r-project.org/web/packages/qrNLMM/index.html), providing more tools to estimate trends through any quantile with data found in a variety of shapes and sizes.\n\n--\n\n*By Matt Russell. [Email Matt](mailto:matt@arbor-analytics.com) with any questions or comments.*"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":{"light":"minty","dark":"slate"},"title-block-banner":true,"title":"Linear quantile mixed models: applications in forestry","description":"LQMM models provide a flexible structure to account for random effects","author":"Matt Russell","date":"2023-08-21","slug":[],"categories":["Statistics"],"tags":["analytics","forest measurements","data science","mixed models","quantile regression"],"image":"lqmm_example.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}